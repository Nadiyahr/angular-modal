{"version":3,"sources":["components/consts.ts","components/Weekly/Weekly.tsx","components/Specific/Specific.tsx","components/Daily/Daily.tsx","components/Form/Form.tsx","components/Modal/Modal.tsx","App.tsx","index.tsx"],"names":["options","value","label","Weekly","setTime","selectedOption","setSelectedOption","placeholder","onChange","opt","type","name","id","e","target","Specific","props","setDate","Daily","Form","useState","setName","email","setEmail","date","time","schediule","setSchediule","format","setFormat","className","htmlFor","checked","onClick","console","log","Modal","onClose","open","closeOnEscDown","code","key","useEffect","document","body","addEventListener","removeEventListener","role","stopPropagation","App","isModalOpen","setIsModalOpen","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d389bfd3.chunk.js","sourcesContent":["export const options: OptionType[] = [\n  { value: 'Monday', label: 'Monday' },\n  { value: 'Tuesday', label: 'Tuesday' },\n  { value: 'Wednesday', label: 'Wednesday' },\n  { value: 'Thursday', label: 'Thursday' },\n  { value: 'Friday', label: 'Friday' },\n  { value: 'Saturday', label: 'Saturday' },\n  { value: 'Sunday', label: 'Sunday' },\n];\n","import React, { FC } from 'react';\nimport Select, { SingleValue } from 'react-select';\nimport { options } from '../consts';\nimport './Weekly.scss';\n\ninterface WeeklyProps {\n  setTime: (time: string) => void;\n  time: string;\n  setSelectedOption: (option: SingleValue<OptionType>) => void;\n  selectedOption: SingleValue<OptionType>;\n}\n\nexport const Weekly: FC<WeeklyProps> = ({ setTime, selectedOption, setSelectedOption }) => {\n  const handleChange = (option: SingleValue<OptionType>) => {\n    setSelectedOption(option);\n  };\n\n  return (\n    <>\n      <Select\n        placeholder=\"Select Device...\"\n        options={options}\n        onChange={opt => handleChange(opt)}\n        value={selectedOption}\n      />\n      <input\n        type=\"time\"\n        name=\"time\"\n        id=\"time\"\n        onChange={(e) => setTime(e.target.value)}\n      />\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport './Specific.scss';\n\ninterface SpecificProps {\n  date: string;\n  setDate: (time: string) => void;\n  setTime: (time: string) => void;\n  time: string;\n}\n\nconst Specific: FC<SpecificProps> = (props) => {\n  const { setDate, setTime } = props;\n\n  return (\n    <>\n      <input\n        type=\"date\"\n        name=\"date\"\n        id=\"date\"\n        onChange={(e) => setDate(e.target.value)}\n      />\n      <span>at</span>\n      <input\n        type=\"time\"\n        name=\"time\"\n        id=\"time\"\n        onChange={(e) => setTime(e.target.value)}\n      />\n    </>\n  );\n};\n\nexport default Specific;\n","import React, { FC } from 'react';\nimport './Daily.scss';\n\ninterface DailyProps {\n  time: string;\n  setTime: (time: string) => void;\n}\n\nconst Daily: FC<DailyProps> = ({ setTime }) => {\n  return (\n    <>\n      <input\n        type=\"time\"\n        name=\"time\"\n        id=\"time\"\n        onChange={(e) => setTime(e.target.value)}\n      />\n    </>\n  );\n};\n\nexport default Daily;\n","/* eslint-disable no-console */\nimport React, { FC, useState } from 'react';\nimport { SingleValue } from 'react-select';\nimport { Weekly } from '../Weekly/Weekly';\nimport { options } from '../consts';\n// import Daily from '../Daily/Daily';\nimport Specific from '../Specific/Specific';\nimport './Form.scss';\nimport Daily from '../Daily/Daily';\n\n// interface FormProps {}\n\nconst Form: FC = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [schediule, setSchediule] = useState('No');\n  const [format, setFormat] = useState('Exel');\n  const [selectedOption, setSelectedOption] = useState<SingleValue<OptionType>>(options[0]);\n\n  const printDate = () => {\n    console.log(date, time, selectedOption?.value);\n  };\n\n  return (\n    <form className=\"report\">\n      <label className=\"report__lable\" htmlFor=\"name\">\n        Enter your name:\n        <input\n          className=\"report__input report__input-name\"\n          id=\"name\"\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </label>\n      <div className=\"report__format\">\n        <span>Format</span>\n        <label htmlFor=\"exel\">\n          Exel\n          <input\n            type=\"radio\"\n            value=\"Exel\"\n            id=\"exel\"\n            checked={format === 'Exel'}\n            onChange={(e) => setFormat(e.target.value)}\n          />\n        </label>\n        <label htmlFor=\"csv\">\n          CSV\n          <input\n            type=\"radio\"\n            value=\"CSV\"\n            id=\"csv\"\n            checked={format === 'CSV'}\n            onChange={(e) => setFormat(e.target.value)}\n          />\n        </label>\n      </div>\n      <label className=\"report__lable\" htmlFor=\"email\">\n        E-mail to:\n        <input\n          className=\"report__input report__input-email\"\n          id=\"email\"\n          type=\"text\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </label>\n      <span>Schedule</span>\n      <div className=\"report__schedule\">\n        <span>Schedule</span>\n        <label htmlFor=\"no\">\n          <input\n            type=\"radio\"\n            value=\"No\"\n            id=\"no\"\n            checked={schediule === 'No'}\n            onChange={(e) => setSchediule(e.target.value)}\n          />\n          No Repeat\n        </label>\n        <label htmlFor=\"spec\">\n          <input\n            type=\"radio\"\n            value=\"Specific\"\n            id=\"spec\"\n            checked={schediule === 'Specific'}\n            onChange={(e) => setSchediule(e.target.value)}\n          />\n          Specific Date\n        </label>\n        <label htmlFor=\"daily\">\n          <input\n            type=\"radio\"\n            value=\"Daily\"\n            id=\"daily\"\n            checked={schediule === 'Daily'}\n            onChange={(e) => setSchediule(e.target.value)}\n          />\n          Daily\n        </label>\n        <label htmlFor=\"weekly\">\n          <input\n            type=\"radio\"\n            value=\"Weekly\"\n            id=\"weekly\"\n            checked={schediule === 'Weekly'}\n            onChange={(e) => setSchediule(e.target.value)}\n          />\n          Weekly\n        </label>\n      </div>\n      <div className=\"report__date\">\n        {schediule === 'Weekly' && (\n          <Weekly\n            setSelectedOption={setSelectedOption}\n            selectedOption={selectedOption}\n            time={time}\n            setTime={setTime}\n          />\n        )}\n      </div>\n      {schediule === 'Specific' && (\n        <Specific\n          date={date}\n          setDate={setDate}\n          time={time}\n          setTime={setTime}\n        />\n      )}\n      {schediule === 'Daily' && (\n        <Daily\n          time={time}\n          setTime={setTime}\n        />\n      )}\n      {/* {schediule === 'Weekly' && (\n        <div className=\"report__date\">\n          <Select\n            placeholder=\"Select Device...\"\n            options={options}\n            onChange={opt => handleChange(opt)}\n            value={selectedOption}\n          />\n          <input\n            type=\"time\"\n            name=\"time\"\n            id=\"time\"\n            onChange={(e) => setTime(e.target.value)}\n          />\n        </div>\n      )} */}\n      <button type=\"button\" onClick={printDate}>print</button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React, {\n  Dispatch, FC, SetStateAction, useEffect,\n} from 'react';\nimport Form from '../Form/Form';\nimport './Modal.scss';\n\ninterface ModalProps {\n  open: Dispatch<SetStateAction<boolean>>;\n  onClose: () => void;\n}\n\nconst Modal: FC<ModalProps> = (props) => {\n  const { onClose, open } = props;\n\n  const closeOnEscDown = (e: KeyboardEvent) => {\n    if ((e.code || e.key) === 'Escape') {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    document.body.addEventListener('keydown', closeOnEscDown);\n\n    return function clean() {\n      document.body.removeEventListener('keydown', closeOnEscDown);\n    };\n  }, []);\n\n  if (!open) {\n    return null;\n  }\n\n  return (\n    <div role=\"presentation\" className=\"modal\" onClick={onClose}>\n      <div role=\"presentation\" className=\"modal__content\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal__header\">\n          <h4 className=\"modal__title\">Modal Component</h4>\n        </div>\n        <div className=\"modal__body\">\n          <Form />\n        </div>\n        <div className=\"modal__fotter\">\n          <button type=\"button\" onClick={onClose}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport Modal from './components/Modal/Modal';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n\n  return (\n    <div className=\"starter\">\n      <h1>Modal tt</h1>\n      <button type=\"button\" onClick={() => setIsModalOpen(true)}>Call modal vindov</button>\n      {isModalOpen && <Modal open={setIsModalOpen} onClose={() => setIsModalOpen(false)} />}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}